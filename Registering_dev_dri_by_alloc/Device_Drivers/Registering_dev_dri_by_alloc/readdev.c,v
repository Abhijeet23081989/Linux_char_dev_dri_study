head	1.6;
access;
symbols;
locks
	asrivastava:1.6; strict;
comment	@ * @;


1.6
date	2018.09.10.15.41.43;	author asrivastava;	state Exp;
branches;
next	1.5;

1.5
date	2018.09.10.15.38.17;	author asrivastava;	state Exp;
branches;
next	1.4;

1.4
date	2018.09.10.15.37.29;	author asrivastava;	state Exp;
branches;
next	1.3;

1.3
date	2018.09.10.15.36.09;	author asrivastava;	state Exp;
branches;
next	1.2;

1.2
date	2018.09.10.15.32.34;	author asrivastava;	state Exp;
branches;
next	1.1;

1.1
date	2018.09.10.15.24.33;	author asrivastava;	state Exp;
branches;
next	;


desc
@first iteration
@


1.6
log
@typo
@
text
@#include"headers.h"
#include"declarations.h"
ssize_t readdev(struct file *myfile, char __user *ubuff, size_t size, loff_t *offset)
{
	//_______________Declaration______________________________________________
	DEV* ldev;
	Qset* lqsetr;
	int noctr,nocsr,lsize,i,ret;
#ifdef DEBUG
	printk(KERN_INFO"BEGIN==>%s\n",__func__);
#endif
	//_____________Saving device name saved in myfile's private_data__________
	ldev=(DEV*)myfile->private_data;
	if(!ldev)
	{
#ifdef DEBUG
		printk(KERN_ERR"Error: unable to return address\n");
#endif
		goto OUT;
	}
	//______________Checking user buffer size_________________________________
	if(size > ldev->datasize)	
	noctr=lsize=ldev->datasize;
	else
	noctr=lsize=size;
	//___________Copying head node of SCULL to local Qset ptr_________________
	lqsetr=ldev->first;
	if(!ldev->first)
	{
#ifdef DEBUG
		printk(KERN_ERR"Error: return address\n");
#endif
		goto OUT;
	}
	i=nocsr=0;
	//________________Reading from kernel space SCULL to user buffer___________
	while(noctr)
	{
		if(noctr>ldev->regsize)
			noctr=ldev->regsize;
		ret=copy_to_user(ubuff+nocsr,lqsetr->data[i],regsize);
			if(ret)
			{
#ifdef DEBUG
				printk(KERN_INFO"Partial write\n");
#endif
				goto RET;
			}
		nocsr=nocsr+(nocsr-ret);
		noctr=lsize-nocsr;
		if(i<ldev->regsize)
			i++;
		else
		{
			lqsetr=lqsetr->next;
			i=0;
		}
	}
#ifdef DEBUG
	printk(KERN_INFO"END=>%s\n",__func__);
#endif	
RET:return nocsr;
OUT: return -1;
}
@


1.5
log
@removed const
@
text
@d50 1
a50 1
		noctw=lsize-nocsr;
@


1.4
log
@typo
@
text
@d3 1
a3 1
ssize_t readdev(struct file *myfile, const char __user *ubuff, size_t size, loff_t *offset)
@


1.3
log
@typo
@
text
@d41 1
a41 1
		ret=copy_to_user(ubuff+nocsr,lqsetr->data[i],regsize)
@


1.2
log
@added comments
@
text
@d8 1
a8 1
	int notcr,nocsr,lsize,i,ret;
@


1.1
log
@Initial revision
@
text
@d9 1
d11 1
d16 1
d18 1
d30 1
d32 1
d36 1
a36 1
	//________________Writing from user buffer to kernel space SCULL___________
d44 1
a44 1
#ifdef
d59 1
d61 1
a61 1
	
d63 1
a63 1
OUT: return -1
@
